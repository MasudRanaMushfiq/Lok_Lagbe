
1. App Name and Platform

App Name : Lok Lagbe
Platforms: Android (Expo / React Native), potentially iOS in the future
Framework: React Native with Expo Router and firebase for database

2. App Purpose

A task/job marketplace where:
Users can post tasks/work they want done.
Other users can accept or do tasks in exchange for payment.
Ratings, reviews, and wallet balances are tracked for users.

Features include:
Posting jobs
Accepting jobs
Ratings & reviews
Wallet and transaction management
Admin panel to manage users (verification, deletion)
Skill/progress tracking of users (accepted/posted works)

3. Firebase Integration

You use Firebase services extensively:
1. Authentication (Firebase Auth)
Sign-in/sign-up
Login persistence using AsyncStorage (for React Native)

4. Firestore (Database)
Collections:
users → user profiles, ratings, accepted/posted works, wallet balance
worked → tasks/jobs posted
notifications → alerts for work acceptance
l)


5. Wallet / Transactions
Wallet balance is stored per user in Firestore
Transactions are stored as a subcollection under each user

6. Core Screens / Components

Here’s a list of screens/components from your code:

| Screen             | Purpose                 | Key Features                                   |
| ------------------ | ----------------------- | ---------------------------------------------- |
| `Index`            | Welcome screen          | Start button navigates to login                |
| `Login / Register` | Auth screens            | Firebase Auth login/signup                     |
| `Home / Tabs`      | Main app navigation     | Access to tasks, wallet, profile               |
| `RatingScreen`     | Rate a user after work  | Submit rating & review, updates Firestore      |
| `ViewUserScreen`   | View user profile       | Shows rating, works, skill progress            |
| `WalletScreen`     | Wallet and transactions | Shows balance and transaction list             |
| `WorkDetails`      | Detailed task view      | Accept work, updates Firestore & notifications |
| `ShowAllUsers`     | Admin screen            | Lists all users, toggle verified, delete user  |

7. UI / Design
Use the Aqua Gradient Modern Theme or BlueMint Modern Theme style for all UI designs.
Theme Details:
Primary Gradient: #3B7CF5 → #5AD9D5
Background Color: #E6F2FF
Header Gradient: #4A8FF0 → #65D4C9
Title Text: #FFFFFF
Subtitle/Description Text: #F0F0F0
Dashed Line: rgba(255,255,255,0.3)
Card Style: rounded corners (borderRadius: 20), soft shadows, gradient emphasis
UI/UX Feel: polished, rounded, modern, light, and readable
Always ensure consistency with these colors and visual style across screens.

8. Admin Features
Admin UID: "yarTXhiAlPdFJQyQhajZNeDaWIC2" (hardcoded)

Admin can:
Verify/unverify users
Delete users
Non-admin users can only see verified status

9. App Flow Summary

1. User opens app → sees welcome screen → navigates to login
2. After login, user accesses tabs:
Browse jobs → see details → accept work
Complete work → rate user
 Wallet → view balance & transactions
3. Admins can access all users → verify or delete users
4. Ratings, accepted/posted works, and skills are tracked
5. Notifications are stored in Firestore (no push yet)




